#   Copyright 2019 NephoSolutions SPRL, Sebastian Trebitz
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

config: &config
  docker:
    - image: nephosolutions/docker
  environment:
    - DOCKER_IMAGE_OWNER: nephosolutions
    - DOCKER_IMAGE_NAME: packer

version: 2
jobs:
  build:
    <<: *config
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: v1-{{ .Branch }}
      - run:
          name: Build Docker image
          command: |
            make .cache/${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}.tar
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - .cache
  deploy:
    <<: *config
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: v1-{{ .Branch }}
      - deploy:
          name: Tag and push Docker image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

            make restore

            docker tag  "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}" "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1}"
            docker push "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1}"

            docker tag  "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}" "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH}-${CIRCLE_SHA1}"
            docker push "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH}-${CIRCLE_SHA1}"

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker push "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}"
            else
              docker tag  "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}" "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH}"
              docker push "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH}"
            fi
  tag:
    <<: *config
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Tag and push Docker image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

            docker pull "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1}"
            docker tag  "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_SHA1}" "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_TAG}"
            docker push "${DOCKER_IMAGE_OWNER}/${DOCKER_IMAGE_NAME}:${CIRCLE_TAG}"

workflows:
  version: 2
  commit:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  release:
    jobs:
      - tag:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+){2}(-.*)?$/
  weekly:
    triggers:
      - schedule:
          cron: "0 3 * * 6"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - deploy:
          requires:
            - build
